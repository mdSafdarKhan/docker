Spring Boot with Docker

	https://spring.io/guides/gs/spring-boot-docker/
	https://spring.io/guides/topicals/spring-boot-docker

Set up a Spring Boot app:
		package hello;

		import org.springframework.boot.SpringApplication;
		import org.springframework.boot.autoconfigure.SpringBootApplication;
		import org.springframework.web.bind.annotation.RequestMapping;
		import org.springframework.web.bind.annotation.RestController;

		@SpringBootApplication
		@RestController
		public class Application {

		  @RequestMapping("/")
		  public String home() {
			return "Hello Docker World";
		  }

		  public static void main(String[] args) {
			SpringApplication.run(Application.class, args);
		  }

		}
		
	Now we can run the application without the Docker container (i.e. in the host OS):
		
		./mvnw package && java -jar target/gs-spring-boot-docker-0.1.0.jar
		
	and go to localhost:8080 to see your "Hello Docker World" message.

Containerize It:
	
	Docker has a simple "Dockerfile" file format that it uses to specify the "layers" of an image. So letâ€™s go ahead and create 
	a Dockerfile in our Spring Boot project:
	
		FROM openjdk:8-jdk-alpine
		ARG JAR_FILE=target/*.jar
		COPY ${JAR_FILE} app.jar
		ENTRYPOINT ["java","-jar","/app.jar"]
		
	You can run it (if you are using Maven) with:
		
		$ docker build -t target/app.jar
		$ docker run -p 8080:8080 target/app.jar

